package com.spring.repository.impl;import com.spring.database.dao.ServiceInfoDao;import com.spring.database.entity.ServiceInfo;import com.spring.repository.ServiceInfoRepository;import org.apache.log4j.Logger;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.List;/** * Created by Alia on 2017/5/10. */@Service("serviceInfoService")public class ServiceInfoRepositoryImpl implements ServiceInfoRepository {    private Logger logger = Logger.getLogger(ServiceInfoRepositoryImpl.class);    @Resource    private ServiceInfoDao serviceInfoDao;    @Override    public boolean isExist(int id) {        if (serviceInfoDao.selectCountById(id) > 0) {            logger.info("ID = " + id + " is exist.");            return true;        } else {            logger.info("ID = " + id + " is not exist.");            return false;        }    }    @Override    public boolean isExist(ServiceInfo serviceInfo) {        if (serviceInfoDao.selectCountByEntity(serviceInfo) > 0) {            logger.info(serviceInfo.toString() + " is exist.");            return true;        } else {            logger.info(serviceInfo.toString() + " is not exist.");            return false;        }    }    @Override    public int addServiceInfo(ServiceInfo serviceInfo) {        if (!isExist(serviceInfo)) {            // not exist : do insert            return serviceInfoDao.insertSelective(serviceInfo);        } else {            // exist ：do nothing            return 0;        }    }    @Override    public List<ServiceInfo> getAllServiceInfo() {        return serviceInfoDao.selectAll();    }    @Override    public ServiceInfo getServiceInfo(int id) {        return serviceInfoDao.selectByPrimaryKey(id);    }    @Override    public ServiceInfo getServiceInfo(ServiceInfo serviceInfo) {        return serviceInfoDao.selectByEntity(serviceInfo);    }    @Override    public int deleteServiceInfo(int id) {        return serviceInfoDao.deleteByPrimaryKey(id);    }    @Override    public int deleteServiceInfo(ServiceInfo serviceInfo) {        return serviceInfoDao.deleteByEntity(serviceInfo);    }    @Override    public int updateServiceInfo(int id, ServiceInfo des) {        if (isExist(des) || !isExist(id)) {            // des exist : do nothing            // id not exist : do nothing            return 0;        } else {            // exist ：do update            des.setId(serviceInfoDao.selectByPrimaryKey(id).getId());            return serviceInfoDao.updateByPrimaryKeySelective(des);        }    }    @Override    public int updateServiceInfo(ServiceInfo src, ServiceInfo des) {        if ( isExist(des) || !isExist(src)) {            // des exist : do nothing            // id not exist : do nothing            return 0;        } else {            // exist ：do update            des.setId(serviceInfoDao.selectByEntity(src).getId());            return serviceInfoDao.updateByPrimaryKeySelective(des);        }    }}