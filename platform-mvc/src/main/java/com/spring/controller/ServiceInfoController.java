package com.spring.controller;import com.spring.database.entity.ServiceInfo;import com.spring.repository.ServiceInfoRepository;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import java.util.List;import static org.springframework.web.bind.annotation.RequestMethod.GET;import static org.springframework.web.bind.annotation.RequestMethod.POST;/** * Created by Alia on 2017/5/10. */@Controller@RequestMapping("/serviceInfo")public class ServiceInfoController {    @Resource    private ServiceInfoRepository serviceInfoRepository;    @RequestMapping(method = GET)    public String toHome(HttpServletRequest request, Model model) {        List<ServiceInfo> s = serviceInfoRepository.getAllServiceInfo();        model.addAttribute("serviceInfoList", s);        return "serviceInfoPage";    }    @RequestMapping(value = "/getWithId", method = GET)    public @ResponseBody    ServiceInfo getEntity(@RequestAttribute int id) {        return serviceInfoRepository.getServiceInfo(id);    }    @RequestMapping(value = "/getWithEntity", method = GET)    public @ResponseBody    ServiceInfo getEntity(@RequestAttribute ServiceInfo s) {        return serviceInfoRepository.getServiceInfo(s);    }    @RequestMapping(value = "/deleteWithId", method = POST)    public @ResponseBody    int deleteEntity(@RequestAttribute int id) {        return serviceInfoRepository.deleteServiceInfo(id);    }    @RequestMapping(value = "/deleteWithEntity", method = POST)    public @ResponseBody    int deleteEntity(@RequestAttribute ServiceInfo s) {        return serviceInfoRepository.deleteServiceInfo(s);    }    @RequestMapping(value = "/add", method = POST)    public @ResponseBody    int addEntity(@RequestAttribute ServiceInfo s) {        return serviceInfoRepository.addServiceInfo(s);    }    @RequestMapping(value = "/updateWithId", method = POST)    public @ResponseBody    int updateEntity(@RequestAttribute int srcId, @RequestAttribute ServiceInfo desService) {        return serviceInfoRepository.updateServiceInfo(srcId, desService);    }    @RequestMapping(value = "/updateWithEntity", method = POST)    public @ResponseBody    int updateEntity(@RequestAttribute ServiceInfo srcService, @RequestAttribute ServiceInfo desService) {        return serviceInfoRepository.updateServiceInfo(srcService, desService);    }}